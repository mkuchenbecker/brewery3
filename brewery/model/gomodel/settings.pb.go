// Code generated by protoc-gen-go. DO NOT EDIT.
// source: settings.proto

package brewery_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConfig) Reset()         { *m = ServerConfig{} }
func (m *ServerConfig) String() string { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()    {}
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c7cab62fa432213, []int{0}
}

func (m *ServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig.Unmarshal(m, b)
}
func (m *ServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig.Marshal(b, m, deterministic)
}
func (m *ServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig.Merge(m, src)
}
func (m *ServerConfig) XXX_Size() int {
	return xxx_messageInfo_ServerConfig.Size(m)
}
func (m *ServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig proto.InternalMessageInfo

func (m *ServerConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ServerConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type BrewerySettings struct {
	Config               *ServerConfig   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Thermometers         []*ServerConfig `protobuf:"bytes,2,rep,name=thermometers,proto3" json:"thermometers,omitempty"`
	Heater               *ServerConfig   `protobuf:"bytes,3,opt,name=heater,proto3" json:"heater,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BrewerySettings) Reset()         { *m = BrewerySettings{} }
func (m *BrewerySettings) String() string { return proto.CompactTextString(m) }
func (*BrewerySettings) ProtoMessage()    {}
func (*BrewerySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c7cab62fa432213, []int{1}
}

func (m *BrewerySettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrewerySettings.Unmarshal(m, b)
}
func (m *BrewerySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrewerySettings.Marshal(b, m, deterministic)
}
func (m *BrewerySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrewerySettings.Merge(m, src)
}
func (m *BrewerySettings) XXX_Size() int {
	return xxx_messageInfo_BrewerySettings.Size(m)
}
func (m *BrewerySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_BrewerySettings.DiscardUnknown(m)
}

var xxx_messageInfo_BrewerySettings proto.InternalMessageInfo

func (m *BrewerySettings) GetConfig() *ServerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *BrewerySettings) GetThermometers() []*ServerConfig {
	if m != nil {
		return m.Thermometers
	}
	return nil
}

func (m *BrewerySettings) GetHeater() *ServerConfig {
	if m != nil {
		return m.Heater
	}
	return nil
}

type GPIOTherm struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPIOTherm) Reset()         { *m = GPIOTherm{} }
func (m *GPIOTherm) String() string { return proto.CompactTextString(m) }
func (*GPIOTherm) ProtoMessage()    {}
func (*GPIOTherm) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c7cab62fa432213, []int{2}
}

func (m *GPIOTherm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPIOTherm.Unmarshal(m, b)
}
func (m *GPIOTherm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPIOTherm.Marshal(b, m, deterministic)
}
func (m *GPIOTherm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPIOTherm.Merge(m, src)
}
func (m *GPIOTherm) XXX_Size() int {
	return xxx_messageInfo_GPIOTherm.Size(m)
}
func (m *GPIOTherm) XXX_DiscardUnknown() {
	xxx_messageInfo_GPIOTherm.DiscardUnknown(m)
}

var xxx_messageInfo_GPIOTherm proto.InternalMessageInfo

func (m *GPIOTherm) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ThemometerSettings struct {
	Port                 int32        `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Thermometers         []*GPIOTherm `protobuf:"bytes,2,rep,name=thermometers,proto3" json:"thermometers,omitempty"`
	Pin                  int32        `protobuf:"varint,3,opt,name=pin,proto3" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ThemometerSettings) Reset()         { *m = ThemometerSettings{} }
func (m *ThemometerSettings) String() string { return proto.CompactTextString(m) }
func (*ThemometerSettings) ProtoMessage()    {}
func (*ThemometerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c7cab62fa432213, []int{3}
}

func (m *ThemometerSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThemometerSettings.Unmarshal(m, b)
}
func (m *ThemometerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThemometerSettings.Marshal(b, m, deterministic)
}
func (m *ThemometerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemometerSettings.Merge(m, src)
}
func (m *ThemometerSettings) XXX_Size() int {
	return xxx_messageInfo_ThemometerSettings.Size(m)
}
func (m *ThemometerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemometerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ThemometerSettings proto.InternalMessageInfo

func (m *ThemometerSettings) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ThemometerSettings) GetThermometers() []*GPIOTherm {
	if m != nil {
		return m.Thermometers
	}
	return nil
}

func (m *ThemometerSettings) GetPin() int32 {
	if m != nil {
		return m.Pin
	}
	return 0
}

type HeaterSettings struct {
	Port                 int32    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Pin                  int32    `protobuf:"varint,2,opt,name=pin,proto3" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaterSettings) Reset()         { *m = HeaterSettings{} }
func (m *HeaterSettings) String() string { return proto.CompactTextString(m) }
func (*HeaterSettings) ProtoMessage()    {}
func (*HeaterSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c7cab62fa432213, []int{4}
}

func (m *HeaterSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaterSettings.Unmarshal(m, b)
}
func (m *HeaterSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaterSettings.Marshal(b, m, deterministic)
}
func (m *HeaterSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaterSettings.Merge(m, src)
}
func (m *HeaterSettings) XXX_Size() int {
	return xxx_messageInfo_HeaterSettings.Size(m)
}
func (m *HeaterSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaterSettings.DiscardUnknown(m)
}

var xxx_messageInfo_HeaterSettings proto.InternalMessageInfo

func (m *HeaterSettings) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HeaterSettings) GetPin() int32 {
	if m != nil {
		return m.Pin
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerConfig)(nil), "brewery.model.ServerConfig")
	proto.RegisterType((*BrewerySettings)(nil), "brewery.model.BrewerySettings")
	proto.RegisterType((*GPIOTherm)(nil), "brewery.model.GPIOTherm")
	proto.RegisterType((*ThemometerSettings)(nil), "brewery.model.ThemometerSettings")
	proto.RegisterType((*HeaterSettings)(nil), "brewery.model.HeaterSettings")
}

func init() { proto.RegisterFile("settings.proto", fileDescriptor_6c7cab62fa432213) }

var fileDescriptor_6c7cab62fa432213 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4e, 0x2d, 0x29,
	0xc9, 0xcc, 0x4b, 0x2f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4d, 0x2a, 0x4a, 0x2d,
	0x4f, 0x2d, 0xaa, 0xd4, 0xcb, 0xcd, 0x4f, 0x49, 0xcd, 0x51, 0xf2, 0xe2, 0xe2, 0x09, 0x4e, 0x2d,
	0x2a, 0x4b, 0x2d, 0x72, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x17, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc,
	0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x41, 0x62, 0x89, 0x29, 0x29, 0x45,
	0x12, 0x4c, 0x10, 0x31, 0x10, 0x1b, 0x24, 0x56, 0x90, 0x5f, 0x54, 0x22, 0xc1, 0xac, 0xc0, 0xa8,
	0xc1, 0x1a, 0x04, 0x66, 0x2b, 0xed, 0x61, 0xe4, 0xe2, 0x77, 0x82, 0x98, 0x1e, 0x0c, 0xb5, 0x54,
	0xc8, 0x98, 0x8b, 0x2d, 0x19, 0x6c, 0x32, 0xd8, 0x44, 0x6e, 0x23, 0x69, 0x3d, 0x14, 0xfb, 0xf5,
	0x90, 0x2d, 0x0f, 0x82, 0x2a, 0x15, 0xb2, 0xe7, 0xe2, 0x29, 0xc9, 0x48, 0x2d, 0xca, 0xcd, 0xcf,
	0x4d, 0x2d, 0x49, 0x2d, 0x2a, 0x96, 0x60, 0x52, 0x60, 0x26, 0xa4, 0x15, 0x45, 0x03, 0xc8, 0xd6,
	0x8c, 0xd4, 0xc4, 0x92, 0xd4, 0x22, 0xb0, 0xfb, 0x08, 0xd9, 0x0a, 0x51, 0xaa, 0x24, 0xcf, 0xc5,
	0xe9, 0x1e, 0xe0, 0xe9, 0x1f, 0x02, 0x32, 0x08, 0xee, 0x67, 0x46, 0x84, 0x9f, 0x95, 0x2a, 0xb8,
	0x84, 0x42, 0x32, 0x52, 0xa1, 0x96, 0xc0, 0x7d, 0x08, 0x0b, 0x09, 0x46, 0x44, 0x48, 0x08, 0xd9,
	0x60, 0xf5, 0x80, 0x04, 0x9a, 0x2b, 0xe0, 0xb6, 0xa1, 0xb9, 0x5e, 0x80, 0x8b, 0xb9, 0x20, 0x33,
	0x0f, 0x1a, 0xb4, 0x20, 0xa6, 0x92, 0x19, 0x17, 0x9f, 0x07, 0xd8, 0x91, 0x78, 0x6d, 0x85, 0xea,
	0x63, 0x82, 0xeb, 0x4b, 0x62, 0x03, 0xc7, 0xb9, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x40, 0x7d,
	0x74, 0x89, 0x05, 0x02, 0x00, 0x00,
}
